{"version":3,"sources":["components/Cargar.js","components/Navbar.js","estructuras/Estruturas_Lineales/Cola.js","components/Agregar.js","components/Eliminar.js","components/Actualizar.js","components/Dibujar.js","components/Buscar.js","components/NavbarInter.js","components/Division.js","components/Divisiones.js","App.js","reportWebVitals.js","index.js"],"names":["edd","propsG","Navbar","Menu","className","Item","to","Component","fs","require","Nodo","dato","this","siguiente","Cola","primero","ultimo","longitud","nuevoNodo","estaVacia","eliminado","nodoActual","text","datoAnterior","datoNuevo","nodoanterior","arr","map","e","Push","archivoJSON","JSON","stringify","writeFile","onChange","files","target","reader","FileReader","console","log","onload","result","toString","trim","data","parse","nombre","datos","Imprimir","obtenerDatos","structW","valores","readAsText","Cargar","props","React","useState","open","setOpen","Modal","basic","onClose","onOpen","size","trigger","Header","icon","Icon","name","Content","Input","fluid","type","accept","Actions","Button","color","inverted","onClick","imprimir","Agregar","placeholder","Eliminar","Actualizar","Dibujar","estructura","Buscar","NavbarInter","state","estrutura","handleItemClick","setState","activeItem","position","Division","Card","Image","src","imagen","wrapped","ui","title","Description","descripcion","extra","Divisiones","Group","itemsPerRow","App","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71d3ec9d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Header, Icon, Modal,Menu,Input } from 'semantic-ui-react'\r\nimport Cola from '../estructuras/Estruturas_Lineales/Cola'\r\n\r\nlet edd,propsG\r\nfunction onChange(e){\r\n    let files = e.target.files[0];\r\n    let reader = new FileReader();\r\n    console.log(e.target.files[0])\r\n    reader.onload = (e) => {\r\n        const text = reader.result.toString().trim();\r\n        console.log(text)\r\n        let data = JSON.parse(text); //parseo de archivo JSON\r\n        structW(data.nombre, data.valores) \r\n        console.log(data)\r\n    }\r\n    reader.readAsText(files);\r\n}\r\nfunction structW(nombre,datos){ // FUNCION PARA SABER QUE TIPO DE ESTRUCTURA ES.\r\n    switch(nombre){\r\n        case \"Pila\" :\r\n            edd = new Cola();\r\n            datos.map(e => edd.Push(e))\r\n            break\r\n        case \"Cola\":\r\n\r\n            edd = new Cola();\r\n            datos.map(e => edd.Push(e))\r\n            console.log(edd.Imprimir())\r\n            break\r\n    }\r\n    propsG.obtenerDatos(edd,nombre);\r\n}\r\n\r\nexport default function Cargar(props) {\r\n    propsG = props\r\n    const [open, setOpen] = React.useState(false)\r\n    return (\r\n        <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='small'\r\n            trigger={<Menu.Item>Cargar</Menu.Item> }\r\n            >\r\n            <Header icon>\r\n                <Icon name='folder open outline' />\r\n                Cargar\r\n            </Header>\r\n            <Modal.Content>\r\n            </Modal.Content>\r\n                <Input fluid type=\"file\" accept=\".json\" onChange={(e) =>  onChange(e)} />\r\n            <Modal.Actions>\r\n                <Button basic color='red' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='remove' /> No\r\n                </Button>\r\n                <Button color='green' inverted onClick={props.imprimir(),() =>  setOpen(false)}>\r\n                <Icon name='checkmark' /> Si\r\n                </Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Menu className=\"ui tpo inverted attached menu\">\r\n                    <Menu.Item>\r\n                        <Link to=\"/gitPagueReac/estructura\">TytusDS</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","var fs = require('fs')\r\nclass Nodo {\r\n    constructor(dato){\r\n        this.dato = dato\r\n        this.siguiente = null\r\n    }\r\n}\r\n\r\nclass Cola {\r\n    constructor(){\r\n        this.primero = null\r\n        this.ultimo = null\r\n        this.longitud = 0 \r\n    }\r\n\r\n    estaVacia() {\r\n        if (this.primero == null){\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    Push(dato){\r\n        let nuevoNodo = new Nodo(dato)\r\n\r\n        if(this.estaVacia()){\r\n            this.primero = nuevoNodo\r\n            this.ultimo = nuevoNodo\r\n        }else{\r\n            nuevoNodo.siguiente = this.primero\r\n            this.primero = nuevoNodo\r\n        }\r\n\r\n        this.longitud++\r\n    }\r\n\r\n    Pop(){\r\n        let eliminado = this.ultimo\r\n        if (this.primero == this.ultimo){\r\n            this.primero = null\r\n            this.ultimo = null\r\n        }else{\r\n            let nodoActual = this.primero\r\n            while (nodoActual.siguiente != eliminado){\r\n                nodoActual = nodoActual.siguiente\r\n            }\r\n\r\n            this.ultimo = nodoActual\r\n            this.ultimo.siguiente = null\r\n        }\r\n        this.longitud--\r\n    }\r\n\r\n    Imprimir(){\r\n        let text = \"\"\r\n        let nodoActual = this.primero\r\n\r\n        while (nodoActual != null){\r\n            text += nodoActual.dato + \"->\"\r\n            if(nodoActual.siguiente != null){\r\n                nodoActual = nodoActual.siguiente\r\n            }else{\r\n                nodoActual = null\r\n            }\r\n            \r\n        }\r\n        text += \"null\"\r\n\r\n        return text\r\n    }\r\n\r\n    actualizar(datoAnterior, datoNuevo){\r\n        let nodoActual = this.primero\r\n\r\n        while(nodoActual != null){\r\n            if(nodoActual.dato == datoAnterior){\r\n                nodoActual.dato = datoNuevo\r\n            }\r\n\r\n            nodoActual = nodoActual.siguiente\r\n        }\r\n    }\r\n\r\n    buscar (dato){\r\n        let datoEncontrado = null\r\n        let nodoActual = this.primero\r\n\r\n        while(nodoActual != null){\r\n            if(nodoActual.dato == dato){\r\n                datoEncontrado = \"El dato se encontró: \"+ nodoActual.dato\r\n                return datoEncontrado\r\n            }\r\n\r\n            nodoActual = nodoActual.siguiente\r\n        }\r\n        datoEncontrado = \"no se encontro el dato\"\r\n        return  datoEncontrado\r\n    }\r\n\r\n    eliminar(dato){\r\n       let nodoActual = this.primero\r\n        let nodoanterior = null\r\n\r\n        if(nodoActual != null && nodoActual.dato == dato){\r\n            this.primero = nodoActual.siguiente\r\n            return\r\n        }\r\n\r\n        while(nodoActual != null && nodoActual.dato != dato){\r\n            nodoanterior = nodoActual\r\n            nodoActual = nodoActual.siguiente\r\n        }\r\n\r\n        if (nodoActual == null){\r\n            return\r\n        }\r\n\r\n        nodoanterior.siguiente = nodoActual.siguiente;\r\n    }\r\n    \r\n    cargar(arr){\r\n        arr.map(e => {\r\n            this.Push(e)\r\n        })\r\n    }\r\n\r\n    guardar(arr){\r\n        var archivoJSON = JSON.stringify(arr)\r\n\r\n        fs.writeFile(\"Cola.json\", archivoJSON)\r\n    }\r\n}\r\n\r\nexport default Cola;","import React from 'react'\r\nimport { Button, Header, Icon, Modal,Menu,Input } from 'semantic-ui-react'\r\nimport './modal.css'\r\n\r\nexport default function Agregar() {\r\n    const [open, setOpen] = React.useState(false)\r\n    return (\r\n        <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='small'\r\n            trigger={<Menu.Item>Agregar</Menu.Item>}\r\n            >\r\n            <Header icon>\r\n                <Icon name='add' />\r\n                Agregar Dato\r\n            </Header>\r\n            <Modal.Content>\r\n                    <Input type=\"text\" fluid placeholder=\"agregar dato\"/>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button basic color='red' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='remove' /> No\r\n                </Button>\r\n                <Button color='green' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='checkmark' /> Yes\r\n                </Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Header, Icon, Modal,Menu,Input } from 'semantic-ui-react'\r\n\r\nexport default function Eliminar() {\r\n    const [open, setOpen] = React.useState(false)\r\n    return (\r\n        <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='small'\r\n            trigger={<Menu.Item>Eliminar</Menu.Item>}\r\n            >\r\n            <Header icon>\r\n                <Icon name='trash' />\r\n                Eliminar Dato\r\n            </Header>\r\n            <Modal.Content>\r\n                    <Input type=\"text\" fluid placeholder=\"agregar dato\"/>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button basic color='red' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='remove' /> No\r\n                </Button>\r\n                <Button color='green' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='checkmark' /> Yes\r\n                </Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Header, Icon, Modal,Menu,Input } from 'semantic-ui-react'\r\n\r\nexport default function Actualizar() {\r\n    const [open, setOpen] = React.useState(false)\r\n    return (\r\n        <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='small'\r\n            trigger={<Menu.Item>Actualizar</Menu.Item>}\r\n            >\r\n            <Header icon>\r\n                <Icon name='edit' />\r\n                Actualizar Dato\r\n            </Header>\r\n            <Modal.Content>\r\n                    <Input type=\"text\" fluid placeholder=\"agregar dato\"/>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button basic color='red' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='remove' /> No\r\n                </Button>\r\n                <Button color='green' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='checkmark' /> Yes\r\n                </Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Dibujar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n           <br/>\r\n           <h1>{this.props.nombre}</h1>\r\n           <h3>{this.props.estructura.Imprimir()}</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, Header, Icon, Modal,Menu,Input } from 'semantic-ui-react'\r\n\r\nexport default function Buscar() {\r\n    const [open, setOpen] = React.useState(false)\r\n    return (\r\n        <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='small'\r\n            trigger={<Menu.Item>Buscar</Menu.Item>}\r\n            >\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Buscar Dato\r\n            </Header>\r\n            <Modal.Content>\r\n                    <Input type=\"text\" fluid placeholder=\"buscar dato\" icon=\"search\"/>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button basic color='red' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='remove' /> No\r\n                </Button>\r\n                <Button color='green' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='checkmark' /> Yes\r\n                </Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport Cargar from './Cargar'\r\nimport Agregar from './Agregar'\r\nimport Eliminar from './Eliminar'\r\nimport Actualizar from './Actualizar'\r\nimport {Link} from 'react-router-dom'\r\nimport Dibujar from './Dibujar';\r\nimport Buscar from './Buscar'\r\n\r\nexport default class NavbarInter extends Component {\r\n    state = {\r\n      estrutura : null,\r\n      nombre: ''\r\n     }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n     \r\n    obtenerDatos = (estructura,nombre) =>{\r\n      this.setState({\r\n        estrutura: estructura,\r\n        nombre: nombre\r\n      })\r\n    }\r\n\r\n    imprimir=()=>{\r\n      console.log(this.state.nombre)\r\n    }\r\n\r\n    render() {\r\n      const { activeItem } = this.state\r\n  \r\n      if(this.state.estrutura == null){\r\n        return (\r\n          <div>\r\n              <Menu className=\"ui tpo inverted attached menu\">\r\n                <Menu.Item>\r\n                            <Link to=\"/gitPagueReac/\">TytusDS</Link>\r\n                </Menu.Item>\r\n                <Cargar obtenerDatos={this.obtenerDatos} imprimir={this.imprimir} />\r\n                <Agregar/>\r\n                <Eliminar/>\r\n                <Actualizar/>\r\n                <Buscar/>\r\n              <Menu.Menu position='right'>\r\n                <Menu.Item name=\"Guardar\" icon='save'>\r\n                </Menu.Item>\r\n                \r\n              </Menu.Menu>\r\n            </Menu>\r\n          </div>\r\n        )\r\n      }else{\r\n        return (\r\n          <div>\r\n              <Menu className=\"ui tpo inverted attached menu\">\r\n                <Menu.Item>\r\n                            <Link to=\"/gitPagueReac/\">TytusDS</Link>\r\n                </Menu.Item>\r\n                <Cargar obtenerDatos={this.obtenerDatos} imprimir={this.imprimir} />\r\n                <Agregar/>\r\n                <Eliminar/>\r\n                <Actualizar/>\r\n                <Buscar/>\r\n              <Menu.Menu position='right'>\r\n                <Menu.Item name=\"Guardar\" icon='save'>\r\n                </Menu.Item>\r\n                \r\n              </Menu.Menu>\r\n            </Menu>\r\n            <Dibujar nombre={this.state.nombre} estructura={this.state.estrutura}/>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Division extends Component {\r\n    render() {\r\n        return (\r\n                 <Card color = {this.props.color}>\r\n                    <Image src={this.props.imagen} wrapped ui={false} />\r\n                    <Card.Content>\r\n                    <Card.Header>{this.props.title}</Card.Header>\r\n                    <Card.Description>\r\n                        {this.props.descripcion}\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                    <a>\r\n                        <Icon className='angle double right icon'>\r\n                            <Link to=\"/gitPagueReac/estructura\">IR</Link>\r\n                         </Icon>\r\n                    </a>\r\n                    </Card.Content>\r\n                </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'semantic-ui-react'\r\nimport Division from './Division'\r\nimport './Divisiones.css'\r\n\r\n\r\nexport default class Divisiones extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"divisiones\"> \r\n            <div className=\"one\">\r\n                <h1>TytusDS</h1>\r\n            </div>\r\n            \r\n            <br/>\r\n            <br/>\r\n            <Card.Group itemsPerRow={4} >\r\n                    <Division title=\"Ordenamiento Burbuja\" descripcion=\"this a description\" color='red' imagen=\"https://upload.wikimedia.org/wikipedia/commons/e/ef/Sorting_shaker_sort_anim.gif\"/>\r\n                    <Division title=\"Ordenamiento Seleccion\" descripcion=\"this a description\" color='green' imagen=\"https://upload.wikimedia.org/wikipedia/commons/a/a5/Smoothsort.gif\"/>\r\n                    <Division title=\"Ordenamiento Insersion\" descripcion=\"this a description\" color='yellow' imagen=\"https://thumbs.gfycat.com/DazzlingGracefulAngelfish-size_restricted.gif\"/>\r\n                    <Division title=\"Ordenamiento Rapido\" descripcion=\"this a description\" color='blue' imagen=\"https://media.geeksforgeeks.org/wp-content/uploads/20190705180519/quicksort.gif\"/>\r\n                   \r\n                    <Division title=\"Lista Simple\" descripcion=\"this a description\" color='green' imagen=\"https://s6.gifyu.com/images/A-1.gif\"/>\r\n                    <Division title=\"Lista doble\" descripcion=\"this a description\" color='yellow' imagen=\"https://s6.gifyu.com/images/A-2.gif\"/>\r\n                    <Division title=\"lista circular simple\" descripcion=\"this a description\" color='blue' imagen=\"https://s6.gifyu.com/images/A-4.gif\"/>\r\n                    <Division title=\"lista circular doble\" descripcion=\"this a description\" color='violet' imagen=\"https://s6.gifyu.com/images/A-3.gif\"/>\r\n\r\n                    <Division title=\"Pila\" descripcion=\"this a description\" color='green' imagen=\"https://s6.gifyu.com/images/Pila.gif\"/>\r\n                    <Division title=\"Cola\" descripcion=\"this a description\" color='yellow' imagen=\"https://s6.gifyu.com/images/Cola.gif\"/>\r\n                    <Division title=\"Cola de Prioridad\" descripcion=\"this a description\" color='blue' imagen=\"https://s6.gifyu.com/images/Cola-de-Prioridad.gif\"/>\r\n                    <Division title=\"arbol x\" descripcion=\"this a description\" color='violet' imagen=\"\"/>\r\n\r\n\r\n                    <Division title=\"arbol 1\" descripcion=\"this a description\"/>\r\n                    <Division title=\"arbol 2\" descripcion=\"this a description\"/>\r\n                    <Division title=\"arbol 3\" descripcion=\"this a description\"/>\r\n                    <Division title=\"arbol 4\" descripcion=\"this a description\"/>\r\n                    <Division title=\"arobl 5\" descripcion=\"this a description\"/>\r\n            </Card.Group>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\n\nimport React from 'react'\nimport './App.css';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport Navbar from './components/Navbar';\nimport NavbarInter from './components/NavbarInter';\nimport Divisiones from './components/Divisiones';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Route exact path=\"/gitPagueReac/\" render={() =>{\n        return <div> \n          <Navbar/>\n          <Divisiones/>\n        </div>\n      }}>\n        </Route>\n\n        <Route exact path=\"/gitPagueReac/estructura\" component={NavbarInter}/>\n      </Router>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}